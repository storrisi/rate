{"version":3,"sources":["pages/Contents/Contents.js","firebase.js","pages/Login/Login.js","routes/index.js","pages/App/App.js","serviceWorker.js","utils/history.js","store.js","redux/reducers/index.js","index.js","assets/images/logo.png","pages/Contents/Contents.module.css","pages/Login/Login.module.css"],"names":["useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","backgroundColor","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","nested","paddingLeft","title","color","appTitle","logo","height","Contents","props","window","classes","useTheme","React","useState","mobileOpen","setMobileOpen","currentItem","setCurrentItem","useListVals","firebase","database","ref","values","loading","error","handleDrawerToggle","useEffect","length","videos","className","List","map","item","ListItem","key","ListItemText","primary","component","disablePadding","video","button","onClick","showVideo","Divider","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","src","Fab","variant","Typography","style","daysToTrialEnd","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","justifyContent","alignItems","CircularProgress","dangerouslySetInnerHTML","__html","description","PlayerWrapper","ReactPlayer","url","videoId","firebaseApp","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","uiConfig","signInFlow","signInOptions","provider","auth","EmailAuthProvider","PROVIDER_ID","signInMethod","EMAIL_LINK_SIGN_IN_METHOD","forceSameDevice","requireDisplayName","credentialHelper","callbacks","signInSuccessWithAuthResult","Login","Logo","firebaseAuth","Routes","isSignedIn","isExpired","userEmail","console","log","exact","path","to","App","setIsSignedIn","setIsExpired","setDaysToTrialEnd","setUserEmail","useAuthState","user","email","diffTime","Math","abs","Date","metadata","creationTime","diffDays","ceil","Boolean","location","hostname","match","history","createHashHistory","rootReducer","combineReducers","router","connectRouter","composeEnhancers","composeWithDevTools","name","loggerMiddleware","createLogger","predicate","getState","action","preloadedState","Component","store","createStore","applyMiddleware","thunkMiddleware","routerMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"odAyBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAO,eACJH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MARc,IASdC,WAAY,IAGhBC,OAAO,aACLC,gBAAiB,WAChBT,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MAAM,eAAD,OAfS,IAeT,OACLI,WAhBc,MAmBlBC,WAAW,aACTC,YAAaZ,EAAMa,QAAQ,IAC1Bb,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAIbY,QAASd,EAAMe,OAAOD,QACtBE,YAAa,CACXV,MA5BgB,KA8BlBW,QAAS,CACPC,SAAU,EACVC,QAASnB,EAAMa,QAAQ,IAEzBO,OAAQ,CACNC,YAAarB,EAAMa,QAAQ,IAE7BS,MAAO,CACLb,gBAAiB,UACjBc,MAAO,SAETC,SAAU,CACRN,SAAU,GAEZO,KAAK,aACHC,OAAQ,IACP1B,EAAMI,YAAYC,GAAG,MAAQ,CAC5BqB,OAAQ,SAkJCC,MA7If,SAAkBC,GAAQ,IAChBC,EAAWD,EAAXC,OACFC,EAAUhC,IACVE,EAAQ+B,cAHS,EAIaC,IAAMC,UAAS,GAJ5B,mBAIhBC,EAJgB,KAIJC,EAJI,OAKeH,IAAMC,SAAS,MAL9B,mBAKhBG,EALgB,KAKHC,EALG,OAMUC,YAAYC,IAASC,WAAWC,IAAI,aAN9C,mBAMhBC,EANgB,KAMRC,EANQ,KAMCC,EAND,KAQjBC,EAAqB,WACzBV,GAAeD,IAQjBY,qBAAU,YACHH,GAAWD,EAAOK,OAAS,GAAGV,EAAeK,EAAO,GAAGM,OAAO,MAClE,CAACL,IAEJ,IAAMxC,EACJ,6BACE,yBAAK8C,UAAWnB,EAAQhB,WACtB6B,GAAWD,GACX,kBAACQ,EAAA,EAAD,KACGR,EAAOS,KAAI,SAACC,GAAD,OACV,oCACE,kBAACC,EAAA,EAAD,CAAUJ,UAAWnB,EAAQR,MAAOgC,IAAKF,EAAK9B,OAC5C,kBAACiC,EAAA,EAAD,CAAcC,QAASJ,EAAK9B,SAE9B,kBAAC4B,EAAA,EAAD,CAAMO,UAAU,MAAMC,gBAAc,GACjCN,EAAKJ,OAAOG,KAAI,SAACQ,GAAD,OACf,kBAACN,EAAA,EAAD,CAAUO,QAAM,EAACX,UAAWnB,EAAQV,OAAQyC,QAAS,kBArBnD,SAACF,GACjBxB,GAAc,GACdE,EAAesB,GAmB0DG,CAAUH,IAAQL,IAAKK,EAAMrC,OACtF,kBAACiC,EAAA,EAAD,CAAcC,QAASG,EAAMrC,aAInC,kBAACyC,EAAA,EAAD,YAQNC,OAAuBC,IAAXpC,EAAuB,kBAAMA,IAASqC,SAASC,WAAOF,EAExE,OACE,yBAAKhB,UAAWnB,EAAQ7B,MACtB,kBAACmE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQrB,UAAWnB,EAAQtB,QAC1C,kBAAC+D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEjD,MAAM,UACNkD,aAAW,cACXC,KAAK,QACLb,QAAShB,EACTI,UAAWnB,EAAQnB,YAEnB,kBAAC,IAAD,OAEF,yBAAKsC,UAAWnB,EAAQN,UACtB,yBAAKmD,IAAKlD,IAAMwB,UAAWnB,EAAQL,QAErC,6BACE,kBAACmD,EAAA,EAAD,CAAKC,QAAQ,WAAWtD,MAAM,UAAUkD,aAAW,OACjD,kBAACK,EAAA,EAAD,CAAYD,QAAQ,KAAKE,MAAO,CAAEnE,YAAa,IAA/C,IACIgB,EAAMoD,gBAFZ,aASN,yBAAK/B,UAAWnB,EAAQ3B,OAAQsE,aAAW,mBAEzC,kBAACQ,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC1B,kBAACC,EAAA,EAAD,CACEpB,UAAWA,EACXa,QAAQ,YACRQ,OAA4B,QAApBrF,EAAMsF,UAAsB,QAAU,OAC9CC,KAAMrD,EACNsD,QAAS3C,EACTf,QAAS,CACP2D,MAAO3D,EAAQd,aAEjB0E,WAAY,CACVC,aAAa,IAGdxF,IAGL,kBAAC8E,EAAA,EAAD,CAAQW,QAAM,EAACT,eAAe,OAC5B,kBAACC,EAAA,EAAD,CACEtD,QAAS,CACP2D,MAAO3D,EAAQd,aAEjB6D,QAAQ,YACRU,MAAI,GAEHpF,KAIP,0BAAM8C,UAAWnB,EAAQb,SACvB,yBAAKgC,UAAWnB,EAAQhB,UACvB8B,GAAS,sCAAYA,GACrBD,GACC,yBAAKoC,MAAO,CAAE7E,QAAS,OAAQ2F,eAAgB,SAAUC,WAAY,SAAUpE,OAAQ,UACrF,kBAACqE,EAAA,EAAD,OAGH3D,GACC,oCACE,4BAAKA,EAAYd,OACjB,yBAAK0E,wBAAyB,CAAEC,OAAQ7D,EAAY8D,eACpD,yBAAKjD,UAAW8B,IAAMoB,eACpB,kBAAC,IAAD,CACElD,UAAW8B,IAAMqB,YACjBC,IAAG,yCAAoCjE,EAAYkE,SACnDhG,MAAM,OACNoB,OAAO,c,iBC1LjB6E,EAAchE,IAASiE,cAVd,CACbC,OAAQC,0CACRC,WAAYD,qCACZE,YAAaF,4CACbG,UAAWH,qBACXI,cAAeJ,iCACfK,kBAAmBL,eACnBM,MAAON,6C,GAKEH,EAAYU,Y,gBCLjBC,EAAW,CAEfC,WAAY,WAEZC,cAAe,CACb,CACEC,SAAU9E,IAAS+E,KAAKC,kBAAkBC,YAC1CC,aAAclF,IAAS+E,KAAKC,kBAAkBG,0BAC9CC,iBAAiB,EACjBC,oBAAoB,IAGxBC,iBAAkB,OAClBC,UAAW,CAETC,4BAA6B,kBAAM,KAaxBC,EATD,WACZ,OACE,yBAAK/E,UAAW8B,IAAMiD,OACpB,yBAAKrD,IAAKlD,IAAMwB,UAAW8B,IAAMkD,OACjC,kBAAC,IAAD,CAAoBf,SAAUA,EAAUgB,aAAc3B,EAAYe,WCPzDa,EApBA,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,UAAWrD,EAAgC,EAAhCA,eAAgBsD,EAAgB,EAAhBA,UAEvD,OADAC,QAAQC,IAAIJ,GAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,KACfN,IAAeC,EAAY,kBAAC,IAAD,CAAUM,GAAG,cAAiB,kBAAC,EAAD,OAE5D,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aACfN,IAAeC,EACd,kBAAC,EAAD,CAAUrD,eAAgBA,EAAgBsD,UAAWA,IAErD,kBAAC,IAAD,CAAUK,GAAG,UCcVC,MAxBf,WAAgB,IAAD,EACuB3G,oBAAS,GADhC,mBACNmG,EADM,KACMS,EADN,OAEqB5G,oBAAS,GAF9B,mBAENoG,EAFM,KAEKS,EAFL,OAG+B7G,mBAAS,GAHxC,mBAGN+C,EAHM,KAGU+D,EAHV,OAIqB9G,mBAAS,MAJ9B,mBAINqG,EAJM,KAIKU,EAJL,OAKWC,YAAa1G,IAAS+E,QALjC,mBAKN4B,EALM,KAKAvG,EALA,KAqBb,OAdAG,qBAAU,WACR,IAAKH,GAAWuG,EAAM,CACpBL,GAAc,GACdG,EAAaE,EAAKC,OAElB,IAAMC,EAAWC,KAAKC,IAAI,IAAIC,KAAS,IAAIA,KAAKL,EAAKM,SAASC,eACxDC,EAAWL,KAAKM,KAAKP,EAAQ,OACnCN,EAAaY,EAAW,IACxBX,EAAkB,GAAKW,MAExB,CAAC/G,IAEJ4F,QAAQC,IAAI7F,EAASuG,EAAMd,EAAYC,GAEhC,kBAAC,EAAD,CAAQD,WAAYA,EAAYC,UAAWA,EAAWrD,eAAgBA,EAAgBsD,UAAWA,KChBtFsB,QACW,cAA7B/H,OAAOgI,SAASC,UAEe,UAA7BjI,OAAOgI,SAASC,UAEhBjI,OAAOgI,SAASC,SAASC,MAAM,2D,YCbpBC,EAFCC,c,6CCMhB,ICL0CD,GDKpCE,ICLoCF,GDKJA,ECJnBG,2BAAgB,CAC/BC,OAAQC,YAAcL,ODKpBM,GAAmBC,+BAAoB,CAC3CC,KAAM,kBAGFC,GAAmBC,wBAAa,CAAEC,UAAW,SAACC,EAAUC,GAAX,OAAsB,KEFzE,IFI8BC,GEFdC,GAFVC,GFKUC,uBACZZ,YAAcL,EAAdK,CAAuBH,IACvBY,GACAR,GAAiBY,2BAAgBC,KAAiBV,GAAkBW,aAAiBpB,MENzEe,GAaTnC,EAZLyC,IAASC,OACP,kBAAC,eAAD,KACE,kBAAC,IAAD,CAAUN,MAAOA,GAAOhB,QAASA,GAC/B,kBAAC,IAAD,CAAiBA,QAASA,GACxB,kBAACe,GAAD,SAIN7G,SAASqH,eAAe,SJmGtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBK5HnBC,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,cAAgB,gCAAgC,YAAc,gC,mBCAhFD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB","file":"static/js/main.d50e136b.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactPlayer from 'react-player'\nimport { useListVals } from 'react-firebase-hooks/database'\nimport firebase from 'firebase'\nimport AppBar from '@material-ui/core/AppBar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport Hidden from '@material-ui/core/Hidden'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Fab from '@material-ui/core/Fab'\nimport logo from '../../assets/images/logo.png'\nimport style from './Contents.module.css'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    backgroundColor: '#1e298b',\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  title: {\n    backgroundColor: '#1e298b',\n    color: 'white',\n  },\n  appTitle: {\n    flexGrow: 1,\n  },\n  logo: {\n    height: 10,\n    [theme.breakpoints.up('md')]: {\n      height: 20,\n    },\n  },\n}))\n\nfunction Contents(props) {\n  const { window } = props\n  const classes = useStyles()\n  const theme = useTheme()\n  const [mobileOpen, setMobileOpen] = React.useState(false)\n  const [currentItem, setCurrentItem] = React.useState(null)\n  const [values, loading, error] = useListVals(firebase.database().ref('sections'))\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen)\n  }\n\n  const showVideo = (video) => {\n    setMobileOpen(false)\n    setCurrentItem(video)\n  }\n\n  useEffect(() => {\n    if (!loading && values.length > 0) setCurrentItem(values[0].videos[0])\n  }, [loading])\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      {!loading && values && (\n        <List>\n          {values.map((item) => (\n            <>\n              <ListItem className={classes.title} key={item.title}>\n                <ListItemText primary={item.title} />\n              </ListItem>\n              <List component=\"div\" disablePadding>\n                {item.videos.map((video) => (\n                  <ListItem button className={classes.nested} onClick={() => showVideo(video)} key={video.title}>\n                    <ListItemText primary={video.title} />\n                  </ListItem>\n                ))}\n              </List>\n              <Divider />\n            </>\n          ))}\n        </List>\n      )}\n    </div>\n  )\n\n  const container = window !== undefined ? () => window().document.body : undefined\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div className={classes.appTitle}>\n            <img src={logo} className={classes.logo} />\n          </div>\n          <div>\n            <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\">\n              <Typography variant=\"h4\" style={{ marginRight: 5 }}>\n                -{props.daysToTrialEnd}\n              </Typography>\n              giorni\n            </Fab>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {error && <h1>Error: {error}</h1>}\n        {loading && (\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n            <CircularProgress />\n          </div>\n        )}\n        {currentItem && (\n          <>\n            <h1>{currentItem.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: currentItem.description }} />\n            <div className={style.PlayerWrapper}>\n              <ReactPlayer\n                className={style.ReactPlayer}\n                url={`https://home.wistia.com/medias/${currentItem.videoId}`}\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </div>\n          </>\n        )}\n      </main>\n    </div>\n  )\n}\n\nContents.propTypes = {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n}\n\nexport default Contents\n","import firebase from 'firebase'\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n}\n\nconst firebaseApp = firebase.initializeApp(config)\n\nconst db = firebaseApp.firestore()\n\nexport { db, firebaseApp, config }\n","// Import FirebaseAuth and firebase.\nimport React from 'react'\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { firebaseApp } from '../../firebase'\nimport logo from '../../assets/images/logo.png'\nimport style from './Login.module.css'\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'redirect',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      signInMethod: firebase.auth.EmailAuthProvider.EMAIL_LINK_SIGN_IN_METHOD,\n      forceSameDevice: false,\n      requireDisplayName: true,\n    },\n  ],\n  credentialHelper: 'none',\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n}\n\nconst Login = () => {\n  return (\n    <div className={style.Login}>\n      <img src={logo} className={style.Logo} />\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebaseApp.auth()} />\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Contents from '../pages/Contents'\nimport Login from '../pages/Login'\n\nconst Routes = ({ isSignedIn, isExpired, daysToTrialEnd, userEmail }) => {\n  console.log(isSignedIn)\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          {isSignedIn && !isExpired ? <Redirect to=\"/contents\" /> : <Login />}\n        </Route>\n        <Route exact path=\"/contents\">\n          {isSignedIn && !isExpired ? (\n            <Contents daysToTrialEnd={daysToTrialEnd} userEmail={userEmail} />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default Routes\n","import React, { useEffect, useState } from 'react'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useListVals } from 'react-firebase-hooks/database'\nimport firebase from 'firebase'\n\nimport Routes from '../../routes'\n\nfunction App() {\n  const [isSignedIn, setIsSignedIn] = useState(false)\n  const [isExpired, setIsExpired] = useState(false)\n  const [daysToTrialEnd, setDaysToTrialEnd] = useState(0)\n  const [userEmail, setUserEmail] = useState(null)\n  const [user, loading] = useAuthState(firebase.auth())\n\n  useEffect(() => {\n    if (!loading && user) {\n      setIsSignedIn(true)\n      setUserEmail(user.email)\n\n      const diffTime = Math.abs(new Date() - new Date(user.metadata.creationTime))\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n      setIsExpired(diffDays > 14)\n      setDaysToTrialEnd(14 - diffDays)\n    }\n  }, [loading])\n\n  console.log(loading, user, isSignedIn, isExpired)\n\n  return <Routes isSignedIn={isSignedIn} isExpired={isExpired} daysToTrialEnd={daysToTrialEnd} userEmail={userEmail} />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { createHashHistory } from 'history'\n\nconst history = createHashHistory()\n\nexport default history\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'\nimport createRootReducer from './redux/reducers'\nimport history from './utils/history'\n\nconst rootReducer = createRootReducer(history)\n\nconst composeEnhancers = composeWithDevTools({\n  name: 'BudgetManager'\n})\n\nconst loggerMiddleware = createLogger({ predicate: (getState, action) => true })\n\nexport default function store(preloadedState) {\n  const store = createStore(\n    connectRouter(history)(rootReducer),\n    preloadedState,\n    composeEnhancers(applyMiddleware(thunkMiddleware, loggerMiddleware, routerMiddleware(history)))\n  )\n\n  if (module.hot) {\n    module.hot.accept('./redux/reducers', () => {\n      store.replaceReducer(connectRouter(history)(rootReducer))\n    })\n  }\n\n  return store\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nexport default function createRootReducer(history) {\n  const newLocal = combineReducers({\n    router: connectRouter(history)\n  })\n  return newLocal\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { AppContainer } from 'react-hot-loader'\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport './index.css'\nimport App from './pages/App'\nimport * as serviceWorker from './serviceWorker'\n\nimport history from './utils/history'\nimport configureStore from './store'\n\nconst store = configureStore()\n\nconst render = (Component) => {\n  ReactDOM.render(\n    <AppContainer>\n      <Provider store={store} history={history}>\n        <ConnectedRouter history={history}>\n          <Component />\n        </ConnectedRouter>\n      </Provider>\n    </AppContainer>,\n    document.getElementById('root')\n  )\n}\n\nrender(App)\n\n// Webpack Hot Module Replacement API\nif (module.hot) {\n  module.hot.accept('./pages/App', () => {\n    render(App)\n  })\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/logo.87a70298.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerWrapper\":\"Contents_PlayerWrapper__1nF_c\",\"ReactPlayer\":\"Contents_ReactPlayer__2zaX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__28ymq\",\"Logo\":\"Login_Logo__3vmGw\"};"],"sourceRoot":""}